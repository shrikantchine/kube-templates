apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: kafka
    app.kubernetes.io/instance: release
    app.kubernetes.io/name: kafka-cfg
  name: kafka-cfg
  namespace: default
data:
  setup.sh: |-
    #!/bin/bash
    ID="${MY_POD_NAME#"release-kafka-"}"
    if [[ -f "/bitnami/kafka/data/meta.properties" ]]; then
      export KAFKA_CFG_BROKER_ID="$(grep "broker.id" /bitnami/kafka/data/meta.properties | awk -F '=' '{print $2}')"
    else
      export KAFKA_CFG_BROKER_ID="$((ID + 10))"
    fi
    exec /entrypoint.sh /run.sh

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kafka
    app.kubernetes.io/instance: release
    app.kubernetes.io/name: kafka-svc
  name: kafka-svc
  namespace: default
spec:
  type: ClusterIP
  ports:
  - name: tcp-client
    port: 9092
    protocol: TCP
    targetPort: kafka-client
  selector:
    app.kubernetes.io/component: kafka
    app.kubernetes.io/instance: release
    app.kubernetes.io/name: kafka

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kafka
    app.kubernetes.io/instance: release
    app.kubernetes.io/name: kafka-svc-headless
  name: kafka-svc-headless
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: tcp-client
    port: 9092
    protocol: TCP
    targetPort: kafka-client
  selector:
    app.kubernetes.io/component: kafka
    app.kubernetes.io/instance: release
    app.kubernetes.io/name: kafka

--- 

apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: kafka
    app.kubernetes.io/instance: release
    app.kubernetes.io/name: kakfa
  name: kafka
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: kafka
      app.kubernetes.io/instance: release
      app.kubernetes.io/name: kafka
  serviceName: kafka-svc-headless
  template:
    metadata:
      labels:
        app.kubernetes.io/component: kafka
        app.kubernetes.io/instance: release
        app.kubernetes.io/name: kafka
    spec:
      containers:
      - name: kafka
        image: bitnami/kafka:3.1.1-debian-10-r0
        ports:
        - containerPort: 9092
          name: kafka-client
          protocol: TCP
        env:
        - name: MY_POD_ID
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: KAFKA_CFG_ZOOKEEPER_CONNECT
          value: zk-svc
        - name: KAFKA_CFG_LISTENER
          value: PLAINTEXT://:9092
        - name: ALLOW_PLAINTEXT_LISTENER
          value: "yes"
        command:
        - /scripts/setup.sh
        volumeMounts:
        - mountPath: /scripts/setup.sh
          name: scripts
          subPath: setup.sh
      volumes:
      - configMap:
          defaultMode: 493
          name: kafka-cfg
        name: scripts
